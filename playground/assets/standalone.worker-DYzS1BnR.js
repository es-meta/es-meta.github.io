let n=null,{resolve:o,promise:e}=Promise.withResolvers();const w=async(t,s)=>{switch(t){case"spec/func":return JSON.parse((await e).spec_func());case"meta/version":return JSON.parse((await e).meta_version());case"meta/iter":return 1;case"meta/debugString":return"";case"spec/irToSpecNameMap":return JSON.parse((await n).irToSpecNameMap);case"spec/version":return JSON.parse((await e).spec_version());case"state/heap":return JSON.parse((await e).state_heap());case"state/callStack":return JSON.parse((await e).state_callStack());default:if(t.startsWith("state/context/"))return JSON.parse((await e).state_context(Number(t.split("/").at(2))));throw p(t)}},x=async(t,s,a)=>{switch(s){case"breakpoint":switch(t){case"POST":return JSON.parse((await e).breakpoint_add(a!==void 0?JSON.stringify(a):void 0));case"DELETE":return JSON.parse((await e).breakpoint_remove(a!==void 0?JSON.stringify(a):void 0));case"PUT":return JSON.parse((await e).breakpoint_toggle(a!==void 0?JSON.stringify(a):void 0));default:throw p(s)}case"exec/run":return JSON.parse((await e).exec_run(a!==void 0?JSON.stringify(a):void 0));case"exec/resumeFromIter":return JSON.parse((await e).exec_resumeFromIter(a!==void 0?JSON.stringify(a):void 0));case"exec/backToProvenance":return JSON.parse((await e).exec_backToProvenance(a!==void 0?JSON.stringify(a):void 0));case"exec/specStep":return JSON.parse((await e).exec_step(r(a)));case"exec/specStepOver":return JSON.parse((await e).exec_stepOver(r(a)));case"exec/specStepOut":return JSON.parse((await e).exec_stepOut(r(a)));case"exec/specContinue":return JSON.parse((await e).exec_continue());case"exec/specRewind":return JSON.parse((await e).exec_rewind());case"exec/specStepBack":return JSON.parse((await e).exec_stepBack(r(a)));case"exec/specStepBackOut":return JSON.parse((await e).exec_stepBackOut(r(a)));case"exec/specStepBackOver":return JSON.parse((await e).exec_stepBackOver(r(a)));case"exec/esAstStep":return JSON.parse((await e).exec_esAstStep());case"exec/esStatementStep":return JSON.parse((await e).exec_esStatementStep());case"exec/esStepOver":return JSON.parse((await e).exec_esStepOver());case"exec/esStepOut":return JSON.parse((await e).exec_esStepOut());case"exec/irStep":return JSON.parse((await e).exec_irStep(r(a)));case"exec/irStepOver":return JSON.parse((await e).exec_irStepOver(r(a)));case"exec/irStepOut":return JSON.parse((await e).exec_irStepOut(r(a)));case"exec/iterPlus":return JSON.parse((await e).exec_iterPlus(r(a)));case"exec/iterMinus":return JSON.parse((await e).exec_iterMinus(r(a)));default:throw p(s)}};self.onmessage=async t=>{const{id:s,type:a,endpoint:u,data:i}=t.data;try{let c;switch(a){case"META":n=i,await import("./main-r1u3ypm6.js").then(async S=>o(await S.StandaloneDebugger.buildFrom(n))),await e;break;case"GET":c=await w(u,i);break;case"POST":case"PUT":case"DELETE":c=await x(a,u,i);break;default:throw new Error(`Unsupported request type: ${a}`)}self.postMessage({id:s,success:!0,data:c})}catch(c){console.error("error",c),self.postMessage({id:s,success:!1,error:c.message})}};function r(t){return typeof t=="boolean"?t:(console.error("Invalid boolean value:",t),!1)}function p(t){return new Error(`Unknown API endpoint ${t}`)}
